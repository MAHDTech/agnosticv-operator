---
- include_tasks: specified_behaviors.yml

- set_fact:
    catalog_item_name: "{{ account | replace('_', '-') }}.{{ catalog_item | lower | regex_replace('_', '-') }}.{{ stage }}"

- name: Use namespace defined in the catalog item YAML
  set_fact:
    anarchy_namespace: >-
      {{ merged_vars.__meta__.anarchy.namespace
      | default(default_anarchy_namespace) }}
    catalog_item_namespace: >-
      {{ merged_vars.__meta__.catalog.namespace | default('openshift') }}

- name: Create Namespace
  k8s:
    name: "{{ item }}"
    api_version: v1
    kind: Namespace
    state: present
  loop:
    - "{{ anarchy_namespace }}"
    - "{{ catalog_item_namespace }}"

- name: OpenShift template
  k8s:
    state: present
    definition: "{{ lookup('template', 'template.yml.j2' ) | from_yaml }}"
    apply: true
  vars:
    _name: "{{ catalog_item_name }}"
    _namespace: "{{ catalog_item_namespace }}"
    # Use description.adoc first, then variables
    _description: >-
      {{ lookup('file',
                ( agnosticv_path,
                  c_i | dirname,
                  'description.adoc') | join('/'),
                  errors='ignore')
      | default(merged_vars.__meta__.catalog.description, true)
      | default(default_description)
      }}

- name: Create / Update Babylon Catalog Item object
  k8s:
    state: present
    definition: "{{ lookup('template', 'catalog_item.yml.j2') | from_yaml }}"
    apply: true
  vars:
    _bookbag: "{{ merged_vars.__meta__.bookbag | default({}) }}"
    _catalog: "{{ merged_vars.__meta__.catalog }}"
    _namespace: "{{ catalog_item_namespace }}"
    _name: "{{ catalog_item_name }}"
    _stage: "{{ stage }}"
    # Use description.adoc first, then variables
    _description: >-
      {{ lookup('file',
                ( agnosticv_path,
                  c_i | dirname,
                  'description.adoc') | join('/'),
                  errors='ignore')
      | default(merged_vars.__meta__.catalog.description, true)
      | default(default_description)
      }}
    _service_ready_message_template_html_j2: >-
      {{ lookup('file',
                ( agnosticv_path,
                  c_i | dirname,
                  'service-ready-message-template.html.j2') | join('/'),
                  errors='ignore')
      }}
    _service_deleted_message_template_html_j2: >-
      {{ lookup('file',
                ( agnosticv_path,
                  c_i | dirname,
                  'service-deleted-message-template.html.j2') | join('/'),
                  errors='ignore')
      }}

- name: Create / Update Babylon User Catalog Item object
  when: _catalog.multiuser | default(false) | bool
  k8s:
    state: present
    definition: "{{ lookup('template', 'user_catalog_item.yml.j2') | from_yaml }}"
    apply: true
  vars:
    _catalog: "{{ vars.merged_vars.__meta__.catalog }}"
    _namespace: "{{ catalog_item_namespace }}"
    _name: "{{ catalog_item_name }}"
    _stage: "{{ stage }}"
    # Use description.adoc first, then variables
    _description: >-
      {{ lookup('file',
                ( agnosticv_path,
                  c_i | dirname,
                  'description.adoc') | join('/'),
                  errors='ignore')
      | default(vars.merged_vars.__meta__.catalog.description, true)
      | default(default_description)
      }}

- name: Create / Update OpenShift Governor object
  when: None != vars.merged_vars.__meta__.deployer.type | default(None)
  k8s:
    state: present
    definition: "{{ lookup('template', 'governor.yml.j2') | from_yaml }}"
    apply: true
  vars:
    _name: "{{ catalog_item_name }}"
    _namespace: "{{ anarchy_namespace }}"

- name: Create / Update Poolboy ResourceProvider
  when: None != vars.merged_vars.__meta__.deployer.type | default(None)
  k8s:
    state: present
    definition: "{{ lookup('template', 'resource_provider.yml.j2') | from_yaml }}"
    apply: true
  vars:
    _name: "{{ catalog_item_name }}"
    _namespace: "{{ poolboy_namespace }}"
    _catalog: "{{ vars.merged_vars.__meta__.catalog }}"
    _governor: "{{ catalog_item_name }}"
